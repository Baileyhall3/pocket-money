<% layout('layout') %>
<div class="content-wrapper">
    <!-- <div style="margin-left: 100px;"> -->
        <!-- <div class="chart-wrapper" style="width: 1360px;">
            <div class="chart-container" style="width: 60%;">
                <h3>Savings History</h3>
                <canvas id="savings-chart"></canvas>
            </div>

            <div class="chart-container" style="width: 500px;">
                <h3>Savings by Account</h3>
                <canvas id="savingsByAccountChart" height="250"></canvas>
            </div>
        </div> -->

        <div style="max-width: 1360px; width: 95%;">
            <div style="margin-bottom: 30px; align-self: self-start;">
                <div class="container-header">
                    <h2>My Pots</h2>
                    <h3><a id="addPot" onclick="openModal('newPotModal')" class="link" href="#">Add New</a></h3>
                </div>
                <div class="savings-container">
                    <% if (pots.length > 0) { %>
                        <% pots.forEach((pot)=> { %>
                            <div class="side-container" data-type="pot">
                                <h5 style="font-size: 16px">
                                    <%= pot.name %>
                                    <% if (pot.sharedWithId) { %>
                                        - shared with <%= pot.sharedWithId %>
                                    <% } %>
                                </h5>
                                <h5 style="font-size: 18px; color: #45a049;">
                                    £<span id="current-amount-<%= pot.id %>">0</span> out of £<%= pot.targetAmount %>
                                </h5>
                                <canvas id="pot-chart-<%= pot.id %>"></canvas>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div>
                            No pots created. Let's create one!
                        </div>
                    <% } %>
                </div>
            </div>
            
            
            <div style="margin-bottom: 30px; align-self: self-start;">
                <div class="container-header">
                    <h2>My Budgets</h2>
                    <h3><a id="addBudget" onclick="openModal('newBudgetModal')" class="link" href="#">Add New</a></h3>
                </div>
                <div class="savings-container">
                    <% if (budgets.length > 0) { %>
                        <% budgets.forEach((budget)=> { %>
                            <div class="side-container" data-type="budget">
                                <h5 style="font-size: 16px">
                                    <%= budget.name %>
                                    <% if (budget.sharedWithId) { %>
                                        - shared with <%= budget.sharedWithId %>
                                    <% } %>
                                </h5>
                                <h5 style="font-size: 18px; color: #45a049;">£550 out of £<%= budget.amount %></h5>
                                <canvas id="budget1-chart"></canvas>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div>
                            No budgets created. Let's create one!
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    <!-- </div> -->
</div>

<script>

    function createDoughnutChart(chartId, actual, total) {
        const ctx = document.getElementById(chartId).getContext('2d');
        const percentage = (actual / total) * 100;
        let actualColor;

        // Determine the color of the "actual" section based on the percentage
        if (percentage > 75) {
            actualColor = '#45a049'; // green
        } else if (percentage > 25 && percentage <= 75) {
            actualColor = '#FFA500'; // amber
        } else {
            actualColor = '#FF0000'; // red
        }

        // Create the doughnut chart
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                datasets: [{
                    data: [actual, total - actual], // actual vs remaining
                    backgroundColor: [actualColor, '#C0C0C0'], // actual and remaining colors
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                cutout: '70%', // Control the size of the doughnut hole
                plugins: {
                    legend: {
                        display: false // Hide the legend
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                const label = tooltipItem.dataIndex === 0 ? 'Actual' : 'Remaining';
                                return `${label}: £${tooltipItem.raw}`;
                            }
                        }
                    }
                }
            }
        });
    }


    document.addEventListener('DOMContentLoaded', function() {
        const pots = <%- JSON.stringify(pots) %>;
        const potTransactions = <%- JSON.stringify(potTransactions) %>; 

        pots.forEach(pot => {
            const potId = pot.id;

            // Filter transactions for the specific account
            const filteredTransactions = potTransactions.filter(transaction => transaction.potId === potId);

            // Calculate the total actual amount from the filtered transactions
            let actualAmount = filteredTransactions.reduce((total, transaction) => {
                return total + transaction.amount;
            }, 0);

            const currentAmountElement = document.getElementById(`current-amount-${potId}`);
            if (currentAmountElement) {
                currentAmountElement.textContent = actualAmount.toFixed(0);
            }

            createDoughnutChart(`pot-chart-${pot.id}`, actualAmount, pot.targetAmount); 

        });
    });

</script>