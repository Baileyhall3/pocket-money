<% layout('layout') %>

<meta name="account-id" content="<%= account.id %>">

<div class="flex-container">
    <div class="content-wrapper" style="align-self: start;">
        <div id="container-header" class="container-header variable-width-80">
            <h2><%= account.name %></h2>
            <div class="dropdown">
                <h3><a class="link" href="#">Actions</a></h3>
                <div class="dropdown-content" id="add-dropdown">
                    <a onclick="openModal('logTransactionModal', { id: '<%= account.id %>', type: 'account', name: '<%= escape(account.name) %>' })" href="#">Log Transaction</a>
                    <% if (sharedWithUser && sharedWithUser.owner_id != user.id) { %>
                            <a href="#" class="disabled-link" title="Only the owner can edit this account">Edit Account</a>
                            <a href="#" class="disabled-link" title="Only the owner can delete this account">Remove Account</a>
                        <% } else { %>
                            <a onclick="openModal('itemDetailsModal', <%= JSON.stringify(account) %>)" href="#">Edit Account</a>
                            <a onclick="openModal('deleteConfirmModal', { id: '<%= account.id %>', type: 'account', name: '<%= escape(account.name) %>' })" href="#">Remove Account</a>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="charts">
            <div class="charts-wrapper">
                <div class="balance-container">
                    <div class="container-rounded">
                        <h2>Balance: Â£<%= account.balance %></h2>
                        <h3>Account Type: <span><%= accountTypes[account.type] %></span></h3>
                    </div>
                    <% if (transactions.length > 0) { %>
                        <!-- Make this show savings if account is savings account, line chart instead ???-->
                        <div class="chart-container" style="max-height: 800px; padding-bottom: 10vh;">
                            <h3><%= account.type == 'Savings' ? 'Savings' : 'Spending' %> Over the Last 7 Days</h3>
                            <%- include('partials/accountChart', { 
                                chartId: `account-chart-${account.id}`, 
                                accountTransactions: transactions, 
                                account: account
                            }) %>
                        </div>
                    <% } %>
                </div>

                <div class="transaction-section-detail variable-width-50">
                    <%- include('partials/transactions', { 
                        transactions: transactions, 
                        currentPage: currentPage, 
                        totalPages: totalPages,
                    }) %>
                </div>
            </div>            
            
            <div class="charts-wrapper">
                <!-- <div class="chart-container">
                    <h3>Balance History</h3>
                    <canvas id="balanceHistoryChart"></canvas>
                </div> -->
                <div class="containers-vertical">
                    <% if (account.shared_with_id) { %>
                        <%- include('partials/itemParticipants', { 
                            user: user, 
                            sharedWithUser: sharedWithUser, 
                            sharedWithTitle: 'Account Partner',
                            item: account
                        }) %>
                    <% } %>
                    <% if (transactions.length > 0) { %>
                        <div class="container-rounded variable-width-50" style="height: fit-content;">
                            <h3>Account Analytics</h3>
                            <% 
                                const today = new Date();
                                const accountCreationDate = new Date(account.created_at);
                                const daysSinceCreation = Math.ceil((today - accountCreationDate) / (1000 * 60 * 60 * 24));
                        
                                // Calculate net spend
                                const totalIncome = transactions
                                    .filter(t => t.type === 'income')
                                    .reduce((sum, t) => sum + t.amount, 0);
                        
                                const totalExpense = transactions
                                    .filter(t => t.type === 'expense')
                                    .reduce((sum, t) => sum + t.amount, 0);
                        
                                const netSpend = totalIncome - totalExpense;
                        
                                // Total spend over last 7 days
                                const sevenDaysAgo = new Date();
                                sevenDaysAgo.setDate(today.getDate() - 7);
                        
                                const totalSpendLast7Days = transactions
                                    .filter(t => t.type === 'expense' && new Date(t.date_made) >= sevenDaysAgo)
                                    .reduce((sum, t) => sum + t.amount, 0);
                        
                                // Largest single income and expense
                                const largestIncome = transactions
                                    .filter(t => t.type === 'income')
                                    .reduce((max, t) => t.amount > max ? t.amount : max, 0);
                        
                                const largestExpense = transactions
                                    .filter(t => t.type === 'expense')
                                    .reduce((max, t) => t.amount > max ? t.amount : max, 0);
                        
                                // Average daily spend
                                const averageDailySpend = (totalExpense / daysSinceCreation).toFixed(2);
                            %>
                            
                                <p>ðŸ’¡<strong>Net Spend Since Account Creation:</strong> Â£<%= netSpend.toFixed(2) %></p>
                                <p>ðŸ’¡<strong>Total Spending (Last 7 Days):</strong> Â£<%= totalSpendLast7Days.toFixed(2) %></p>
                                <p>ðŸ’¡<strong>Largest Single Income:</strong> Â£<%= largestIncome.toFixed(2) %></p>
                                <p>ðŸ’¡<strong>Largest Single Expense:</strong> Â£<%= largestExpense.toFixed(2) %></p>
                                <p>ðŸ“Š <strong>Average Daily Spend:</strong> Â£<%= averageDailySpend %></p>
                            <p>ðŸ’¡<strong>Days Since Account Creation:</strong> <%= daysSinceCreation %> days</p>
                        
                            <% if (netSpend < 0) { %>
                                <p style="color: red;">
                                    <i class="fa fa-exclamation-triangle"></i>
                                    Your account has a negative net spend. Consider reviewing your expenses.
                                </p>
                            <% } %>
                        
                            <% if (totalSpendLast7Days > (totalExpense / (daysSinceCreation * 7))) { %>
                                <p style="color: orange;">
                                    <i class="fa fa-exclamation-circle"></i>
                                    Your spending in the last 7 days is higher than your average weekly spend.
                                </p>
                            <% } %>
                        </div>
                    <% } %>
                </div>
                <% if (transactions.length > 0) { %>
                    <div class="spending-categories-container chart-container" >
                        <h3>Spending Breakdown by Category</h3>
                        <canvas id="spendingCategoriesChart"></canvas>
                    </div>
                <% } %>

                
            </div>
        </div>
    </div>
</div>

<script src="/js/shared.js"></script>
<script>

    document.addEventListener('DOMContentLoaded', function() {

        const transactions = <%- JSON.stringify(transactions) %>; // Get transaction data
        const account = <%- JSON.stringify(account) %>; // Get transaction data
        
        if (transactions.length > 0) {

            const categorySpending = <%- JSON.stringify(categorySpending) %>; 

            const filteredCategorySpending = Object.entries(categorySpending).filter(([category, value]) => value > 0);
            const chartLabels = filteredCategorySpending.map(([category]) => category);
            const chartValues = filteredCategorySpending.map(([, value]) => value);

            const pieData = {
                labels: chartLabels,
                datasets: [{
                    data: chartValues,
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'], // Add colour for each category (12)
                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']
                }]
            };

            // pie chart for recent spending
            const spendingCategoriesCtx = document.getElementById('spendingCategoriesChart').getContext('2d');
            new Chart(spendingCategoriesCtx, {
                type: 'pie',
                data: pieData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

        }
    });
</script>