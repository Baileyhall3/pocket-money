<% layout('layout') %>

<meta name="budget-id" content="<%= budget.id %>">

<div class="flex-container">
    <div id="details-container" class="content-wrapper" style="align-self: start;">
        <div class="container-header variable-width-80">
            <h2><%= budget.name %></h2>
            <div class="dropdown">
                <h3><a class="link" id="budget-actions-btn" href="#">Budget Actions</a></h3>
                <div class="dropdown-content" id="budget-actions-dropdown">
                    <a onclick="openModal('logTransactionModal', { id: '<%= budget.id %>', type: 'budget', name: '<%= escape(budget.name) %>' })" href="#">Log Transaction</a>
                    <% if (sharedWithUser && sharedWithUser.owner_id != user.id) { %>
                            <a href="#" class="disabled-link" title="Only the owner can edit this budget">Edit Budget</a>
                            <a href="#" class="disabled-link" title="Only the owner can delete this budget">Delete Budget</a>
                        <% } else { %>
                            <a onclick="openModal('itemDetailsModal', <%= JSON.stringify(budget) %>)" href="#">Edit Budget</a>
                            <a onclick="openModal('deleteConfirmModal', { id: '<%= budget.id %>', type: 'budget', name: '<%= escape(budget.name) %>' })" href="#">Delete Budget</a>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="charts">
            <div class="charts-wrapper">
                <div class="balance-container">
                    <div class="chart-container">
                        <%- include('partials/savingsDoughnut', { 
                            chartId: `budget-chart-${budget.id}`, 
                            actualAmount: budget.actual_amount, 
                            totalAmount: budget.target_amount,
                            reverseColours: true
                        }) %>
                        <h3 id="title-display">Spending Performance: £<%= budget.actual_amount + " / £" + budget.target_amount %></h3>
                        <h3>Budget Period: 
                            <span class="time-period-dates">
                                <%= DateUtils.toLongDate(budget.start_date) + (budget.end_date ? ' - ' + DateUtils.toLongDate(budget.end_date) : '') %>
                            </span>
                        </h3>
                    </div>
                    <!-- <% if (transactions.length > 0) { %>
                        <div class="chart-container" style="max-height: 800px; padding-bottom: 10vh;">
                            <h3>Spending Over the Last 7 Days</h3>
                            <canvas id="recentSpendingChart"></canvas>
                        </div>
                    <% } %> -->
                </div>

                <div id="transactions-container" class="transaction-section-detail variable-width-50"">
                    <%- include('partials/transactions', { 
                        transactions: transactions, 
                        currentPage: currentPage, 
                        totalPages: totalPages,
                        isShared: budget.shared_with_id ? true : false
                    }) %>
                </div>
            </div>            
            
            <div class="charts-wrapper">
                <% if (budget.shared_with_id) { %>
                    <%- include('partials/itemParticipants', { 
                        user: user, 
                        sharedWithUser: sharedWithUser, 
                        sharedWithTitle: 'Budget Buddies',
                        item: budget
                    }) %>
                <% } %>
                <div class="container-rounded variable-width-50">
                    <h3>Budget Analytics</h3>
                    
                    <% if (budget.end_date) { 
                        const today = new Date();
                        const endDate = new Date(budget.end_date);
                        const daysLeft = Math.ceil((endDate - today) / (1000 * 60 * 60 * 24));
                        const spentAmount = budget.actual_amount;
                        const budgetAmount = budget.target_amount;
                        const remainingBudget = budgetAmount - spentAmount;
                        const dailyBudget = (remainingBudget / daysLeft).toFixed(2);
                        const weeklyBudget = (remainingBudget / (daysLeft / 7)).toFixed(2);
                        const monthlyBudget = (remainingBudget / (daysLeft / 30)).toFixed(2);
                        const isAfterEndDate = endDate < today;
                        const endDaysAgo = Math.ceil((today - endDate) / (1000 * 60 * 60 * 24));
                    %>
                    
                        <% if (!isAfterEndDate) { %>
                            <% if (daysLeft <= 7) { %>
                                <p>💡 You can spend <strong>£<%= dailyBudget %></strong> per day to stay within your budget until <%= DateUtils.toLongDate(budget.end_date) %>.</p>
                            <% } else if (daysLeft <= 30) { %>
                                <p>💡 You can spend <strong>£<%= weeklyBudget %></strong> per week to stay within your budget until <%= DateUtils.toLongDate(budget.end_date) %>.</p>
                            <% } else { %>
                                <p>💡 You can spend <strong>£<%= monthlyBudget %></strong> per month to stay within your budget until <%= DateUtils.toLongDate(budget.end_date) %>.</p>
                            <% } %>
                        <% } else { %>
                            <% if (spentAmount > budgetAmount) { %>
                                <p>
                                    <!-- <i class="fa fa-exclamation-triangle" style="color: red;"></i> -->
                                    Your budget period ended <strong><%= endDaysAgo %></strong> days ago, and you exceeded your budget by <strong>£<%= (spentAmount - budgetAmount).toFixed(2) %></strong>.
                                </p>
                            <% } else { %>
                                <p>
                                    ✅ Your budget period ended <strong><%= endDaysAgo %></strong> days ago, and you stayed within budget. Well done!
                                </p>
                            <% } %>
                        <% } %>
                        
                        <% if (spentAmount >= budgetAmount && !isAfterEndDate) { %>
                            <p>
                                <!-- <i class="fa fa-exclamation-triangle" style="color: red;"></i> -->
                                ⚠️ You've already reached your budget limit, but the budget period is still ongoing! Reduce spending to avoid overspending.
                            </p>
                        <% } %>
                        
                        <% const nextMilestone = Math.ceil(spentAmount / budgetAmount * 100 / 25) * 25; 
                           const milestoneAmount = (budgetAmount * (nextMilestone / 100)).toFixed(2);
                           const amountToMilestone = (milestoneAmount - spentAmount).toFixed(2);
                        %>
                        
                        <% if (nextMilestone < 100 && amountToMilestone > 0) { %>
                            <p>
                                ⚠️ You’re <strong>£<%= amountToMilestone %></strong> away from utilizing <strong><%= nextMilestone %>%</strong> of your budget.
                            </p>
                        <% } %>
                        <% if (spentAmount < budgetAmount && !isAfterEndDate && transactions.length > 0) { 
                            const spendRate = (spentAmount / (budgetAmount / (daysLeft + (budgetAmount / spentAmount)))).toFixed(2);
                        %>
                            <p>
                                📊 At your current spending rate, you're projected to have <strong>£<%= (remainingBudget - (spendRate * daysLeft)).toFixed(2) %></strong> remaining by the end of your budget period.
                            </p>
                        <% } %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/js/shared.js"></script>

<script>

    document.addEventListener('DOMContentLoaded', function() {
        const budget = <%- JSON.stringify(budget) %>;

        const transactions = <%- JSON.stringify(transactions) %>;
        
        if (transactions.length > 0) {

            // const labels = getLast7Days();

            // const spendingData = labels.map(date => {
            //     const dailyTotal = transactions
            //         .filter(transaction => transaction.dateMade === date)
            //         .reduce((total, transaction) => total + transaction.amount, 0);
            //     return dailyTotal;
            // });

            // const ctx = document.getElementById('recentSpendingChart').getContext('2d');
            // new Chart(ctx, {
            //     type: 'bar',
            //     data: {
            //         labels: labels, 
            //         datasets: [{
            //             label: 'Spending',
            //             data: spendingData,
            //             backgroundColor: 'rgba(54, 162, 235, 0.2)',
            //             borderColor: 'rgba(54, 162, 235, 1)',
            //             borderWidth: 1
            //         }]
            //     },
            //     options: {
            //         responsive: true,
            //         maintainAspectRatio: false,
            //         scales: {
            //             y: {
            //                 beginAtZero: true,
            //             }
            //         }
            //     }
            // });

            const categorySpending = <%- JSON.stringify(categorySpending) %>; 

            const filteredCategorySpending = Object.entries(categorySpending).filter(([category, value]) => value > 0);
            const chartLabels = filteredCategorySpending.map(([category]) => category);
            const chartValues = filteredCategorySpending.map(([, value]) => value);

            const pieData = {
                labels: chartLabels,
                datasets: [{
                    data: chartValues,
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'], // Add colour for each category (12)
                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']
                }]
            };

            // pie chart for recent spending
            const spendingCategoriesCtx = document.getElementById('spendingCategoriesChart').getContext('2d');
            new Chart(spendingCategoriesCtx, {
                type: 'pie',
                data: pieData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

        }
    });
</script>
