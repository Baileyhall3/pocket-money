<% layout('layout') %>
<div class="content-wrapper">
    <div class="accounts">
        <div class="container-header" style="justify-content: normal;">
            <h2>My Accounts</h2>
            <button class="icon-btn" style="margin-left: 2em;" id="add-btn" title="Create a new account" onclick="openModal('newAccountModal')">
                <i class="fa fa-plus"></i>
            </button>
            <button class="icon-btn" style="margin-left: 1em;" id="transfer-btn" title="Transfer balance" onclick="handleTransferClick()">
                <i class="fa fa-exchange"></i>
            </button>
        </div>
        <div id="accounts-container">
            <% if (accounts.length > 0) { %>
                <% accounts.forEach((account) => { %>
                    <% 
                        const accountTransactions = transactions.filter(transaction => transaction.account_id === account.id);
                        const limitedTransactions = accountTransactions.slice(0, 5);
                        const sortedTransactions = limitedTransactions.sort((a, b) => new Date(b.date_made) - new Date(a.date_made));
                    %>
                    <a href="/accounts/<%= account.id %>" style="text-decoration: none; color: inherit;">
                        <div class="account-container container-rounded-pointer account-item">
                            <% if (limitedTransactions.length > 0) { %>
                                <div class="account-chart-container">
                                    <canvas id="account-chart-<%= account.id %>"></canvas>
                                </div>
                            <% } %>
                            
                            <div class="account-details">
                                <h5 class="account-title">
                                    <% if (account.shared_with_id) { %>
                                        <i class="fa fa-handshake-o" title="This is a shared account"></i>
                                        | 
                                    <% } %>
                                    <%= account.name + ' (£' + account.balance + ')' %>
                                    <% if (account.is_active) { %>
                                        <i class="fa fa-star active-account-star" title="This is the active account"></i>
                                    <% } %>
                                </h5>
                                <% if (limitedTransactions.length > 0) { %>
                                    <% limitedTransactions.forEach(transaction => { %>
                                        <% if (transaction.account_id === account.id) { %>
                                            <div class="transaction">
                                                <div class="money-bar-header">
                                                    <h5 style="font-size: 18px; margin: 0;" class="<%= transaction.type == 'expense' ? 'expense' : '' %>">
                                                        <%= account.shared_with_id ? transaction.name + ' made by ' + transaction.user_id : transaction.name %>
                                                    </h5>
                                                    <p style="font-size: 20px; margin: 0;" class="<%= transaction.type == 'expense' ? 'expense' : 'income' %>">
                                                        <%= transaction.type == 'expense' ? '- ' : '' %> £<%= transaction.amount %>
                                                    </p>
                                                </div>
                                                <div class="money-bar-header" style="margin-bottom: 20px;">
                                                    <h5 style="font-size: 16px; margin: 0; font-weight: 100;" class="<%= transaction.type == 'expense' ? 'expense' : '' %>">
                                                        <%= transaction.category %>
                                                    </h5>
                                                    <p style="font-size: 14px; margin: 0;" class="<%= transaction.type == 'expense' ? 'expense' : 'normal' %>">
                                                        <%= DateUtils.toShortDate(transaction.date_made) %>
                                                    </p>
                                                </div>
                                            </div>
                                        <% } %>
                                    <% }); %>
                                <% } else { %>
                                    <div class="">
                                        No transactions for this account yet.
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </a>
                <% }); %>
            <% } else { %>
                <div class="account-container container-rounded">
                    No accounts created yet! <a href="#" onclick="openModal('newAccountModal')">Let's create one!</a>
                </div>
            <% } %>
        </div>
    </div>
</div>

<script src="/js/shared.js"></script>

<script type="text/javascript">
    const accountsData = JSON.parse('<%- JSON.stringify(accounts) %>');
    
    function handleTransferClick() {
        openModal('balanceTransferModal', { accounts: accountsData });
    }

    // This function renders charts for each account
    document.addEventListener('DOMContentLoaded', function() {
        const accounts = JSON.parse('<%- JSON.stringify(accounts) %>'); // Get account data
        const transactions = JSON.parse('<%- JSON.stringify(transactions) %>'); // Get transaction data

        accounts.forEach(account => {
            const accountId = account.id;

            // Filter transactions for the specific account
            const accountTransactions = transactions.filter(transaction => transaction.account_id === accountId);

            if (accountTransactions.length > 0) {

                // Get the last 7 days in DD/MM/YYYY format
                const labels = getLast7Days();

                const spendingData = labels.map(date => {
                    const dailyTotal = accountTransactions
                        .filter(transaction => DateUtils.toShortDate(transaction.date_made) === date && (account.type == 'Savings' ? transaction.type === 'income' : transaction.type === 'expense')) // Compare against the formatted date
                        .reduce((total, transaction) => total + transaction.amount, 0);
                    return dailyTotal;
                });

                // Chart configuration
                const ctx = document.getElementById(`account-chart-${accountId}`).getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels, // Last 7 days
                        datasets: [{
                            label: 'Spending',
                            data: spendingData, // Dynamic spending data
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: Math.max(...spendingData) + 50 // Add some buffer above the max value
                            }
                        }
                    }
                });
            }
        });
    });
</script>

<style>
    .account-chart-container {
        height: 100%;
        max-height: 800px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .account-chart-container canvas {
        height: 100% !important;
        width: 100% !important;
    }
</style>
