<% layout('layout') %>
<div class="content-wrapper">
    <div style="width: 80%; margin-top: 40px;">
        <div class="container-header">
            <h2>My Accounts</h2>
            <h3><a class="link" onclick="openModal('newAccountModal')" href="#" id="addAccount">Add New</a></h3>

            <!-- Modal for new account -->
            <div id="newAccountModal" class="modal">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="close">&times;</span>
                        <h2>New Account</h2>
                    </div>
                    
                    <form id="newAccountForm">
                        <label for="accountName">Name:</label>
                        <input type="text" id="accountName" name="accountName" required>
                    
                        <label for="defaultCurrency">Default Currency:</label>
                        <select id="defaultCurrency" name="defaultCurrency" required>
                            <option value="£">£ - British Pound</option>
                            <option value="€">€ - Euro</option>
                        </select>
                    
                        <label for="accountType">Type:</label>
                        <select id="accountType" name="accountType" required>
                            <option value="personal">Personal</option>
                            <option value="savings">Savings</option>
                            <option value="joint">Joint</option>
                        </select>
                    
                        <!-- Joining Partner Field (Disabled unless 'Joint' is selected) -->
                        <label for="joiningPartner">Joining Partner:</label>
                        <select id="joiningPartner" name="joiningPartner" disabled>
                            <option value="">--- Select a joining partner ---</option>
                            <% if (friends.length > 0) { %>
                                <% friends.forEach((friend, index) => { %>
                                    <option value="friend.userId"><%= friend.userName %></option>
                                <% }); %>
                            <% } %>
                        </select>
                    
                        <label for="defaultAccount">
                            <input type="checkbox" id="defaultAccount" name="defaultAccount">
                            Make this my default account
                        </label>
                    
                        <button type="submit" class="btn">Create Account</button>
                    </form>
                </div>
            </div>
        </div>
        <% if (accounts.length > 0) { %>
            <% accounts.forEach((account) => { %>
                <% 
                    const accountTransactions = transactions.filter(transaction => transaction.accountId === account.id);
                    const limitedTransactions = accountTransactions.slice(0, 5);
                %>
                <a href="/accounts/<%= account.id %>" style="text-decoration: none; color: inherit;">
                    <div class="account-container container-rounded-pointer">
                        <% if (limitedTransactions.length > 0) { %>
                            <div class="account-chart-container">
                                <canvas id="account-chart-<%= account.id %>"></canvas>
                            </div>
                        <% } %>
                        
                        <div class="account-details">
                            <h5 class="account-title">
                                <%= account.name %>
                                <% if (account.sharedWithId) { %>
                                    - shared with 
                                    <% if (account.sharedWithId === user.id) { %>
                                        me
                                    <% } else { %>
                                        <%= account.sharedWithId %>
                                    <% } %>
                                <% } %>
                            </h5>
                            <% if (limitedTransactions.length > 0) { %>
                                <% limitedTransactions.forEach(transaction => { %>
                                    <% if (transaction.accountId === account.id) { %>
                                        <div class="transaction">
                                            <div class="money-bar-header">
                                                <h5 style="font-size: 18px; margin: 0;" class="<%= transaction.type == 'expense' ? 'expense' : '' %>">
                                                    <%= account.sharedWithId ? transaction.name + ' made by ' + transaction.userId : transaction.name %>
                                                </h5>
                                                <p style="font-size: 20px; margin: 0;" class="<%= transaction.type == 'expense' ? 'expense' : 'income' %>">
                                                    <%= transaction.type == 'expense' ? '- ' : '' %> £<%= transaction.amount %>
                                                </p>
                                            </div>
                                            <div class="money-bar-header" style="margin-bottom: 20px;">
                                                <h5 style="font-size: 16px; margin: 0; font-weight: 100;" class="<%= transaction.type == 'expense' ? 'expense' : '' %>">
                                                    <%= transaction.category %>
                                                </h5>
                                                <p style="font-size: 14px; margin: 0;" class="<%= transaction.type == 'expense' ? 'expense' : 'normal' %>">
                                                    <%= transaction.dateMade %>
                                                </p>
                                            </div>
                                        </div>
                                    <% } %>
                                <% }); %>
                            <% } else { %>
                                <div class="">
                                    No transactions for this account yet! Let's log one
                                </div>
                            <% } %>
                        </div>
                    </div>
                </a>
            <% }); %>
        <% } else { %>
            <div class="account-container container-rounded-pointer">
                No accounts created yet! <a onclick="openModal('newAccountModal')" href="#">Let's create one</a>
            </div>
        <% } %>
        </div>
    </div>
</div>

<script src="/js/shared.js"></script>

<script>
    document.getElementById('accountType').addEventListener('change', function() {
        const joiningPartnerInput = document.getElementById('joiningPartner');
        if (this.value === 'joint') {
            joiningPartnerInput.disabled = false;
        } else {
            joiningPartnerInput.disabled = true;
            joiningPartnerInput.value = '';
        }
    });

    // This function renders charts for each account
    document.addEventListener('DOMContentLoaded', function() {
        const accounts = <%- JSON.stringify(accounts) %>; // Get account data
        const transactions = <%- JSON.stringify(transactions) %>; // Get transaction data

        accounts.forEach(account => {
            const accountId = account.id;

            // Filter transactions for the specific account
            const accountTransactions = transactions.filter(transaction => transaction.accountId === accountId);

            if (accountTransactions.length > 0) {

                // Get the last 7 days in DD/MM/YYYY format
                const labels = getLast7Days();

                // Prepare the data for the chart
                const spendingData = labels.map(date => {
                    // Sum up the transactions for each specific date
                    const dailyTotal = accountTransactions
                        .filter(transaction => transaction.dateMade === date) // Compare against the formatted date
                        .reduce((total, transaction) => total + transaction.amount, 0);
                    return dailyTotal;
                });

                // Chart configuration
                const ctx = document.getElementById(`account-chart-${accountId}`).getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels, // Last 7 days
                        datasets: [{
                            label: 'Spending',
                            data: spendingData, // Dynamic spending data
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: Math.max(...spendingData) + 50 // Add some buffer above the max value
                            }
                        }
                    }
                });
            }
        });
    });
</script>