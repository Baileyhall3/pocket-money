<% layout('layout') %>    
    <div class="flex-container transactions">
        <div class="transaction-section" style="overflow-y: auto; height: fit-content;">
            <div class="container-header">
                <h3>Recurrent Transactions</h3>
            </div>

            <div class="transactions-container">
                <% 
                    const frequencies = Object.values(RecTransactionEnums.RecTransactionFrequencies);
                %>
            
                <% frequencies.forEach(frequency => { %>
                    <% 
                        const transactionsForFrequency = transactions.filter(transaction => transaction.frequency === frequency);
                    %>
                    <button class="collapsible">
                        <%= frequency + " (" + transactionsForFrequency.length + ")" %>
                        <i class="fa fa-chevron-down"></i>
                    </button>
                    <div class="content">
                        
                        <% if (transactionsForFrequency.length > 0) { %>
                            <% transactionsForFrequency.forEach(transaction => { %>
                                <div id="recTransactionModal-<%= transaction.id %>" class="modal">
                                    <div class="modal-content">
                                        <span class="close" onclick="closeModal('recTransactionModal-<%= transaction.id %>')">&times;</span>
                                        <div class="modal-header">
                                            <h2><%= transaction.description %></h2>
                                        </div>
                                        <p>Amount: £<%- transaction.amount %></p>
                                        <p>Start Date: <%- DateUtils.toDateTime(transaction.start_date) %> </p>
                                        <!--Made by???-->
                                        <div class="modal-buttons-end">
                                            <button type="button" class="modal-footer-btn cancel-btn" onclick="closeModal('recTransactionModal-<%= transaction.id %>')">Cancel</button>
                                            <button type="button" class="modal-footer-btn delete-btn" onclick="deleteTransaction(<%= JSON.stringify(transaction) %>)">
                                                Delete
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <div class="transaction transaction-editable" onclick="openModal('recTransactionModal-<%- transaction.id %>')">
                                    <div class="money-bar-header">
                                        <h5 style="font-size: 18px; margin: 0;" class="<%= transaction.type === 'expense' ? 'expense' : '' %>">
                                            <%= transaction.description %>
                                        </h5>
                                        <p style="font-size: 20px; margin: 0;" class="<%= transaction.type === 'expense' ? 'expense' : 'income' %>">
                                            <%= transaction.type === 'expense' ? '- ' : '' %> £<%= transaction.amount %>
                                        </p>
                                    </div>
                                    <div class="money-bar-header" style="margin-bottom: 20px;">
                                        <h5 style="font-size: 16px; margin: 0; font-weight: 100;" class="<%= transaction.type === 'expense' ? 'expense' : '' %>">
                                            <%= transaction.category %>
                                        </h5>
                                        <p style="font-size: 14px; margin: 0;" class="<%= transaction.type === 'expense' ? 'expense' : 'normal' %>">
                                            <%= DateUtils.toShortDate(transaction.start_date) %>
                                        </p>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="">
                                No recurrent transactions for <%= frequency %> yet!
                            </div>
                        <% } %>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>
            
<script src="/js/shared.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const collapsibles = document.querySelectorAll(".collapsible");
        collapsibles.forEach(collapsible => {
            collapsible.addEventListener("click", function() {
                this.classList.toggle("active");
                const content = this.nextElementSibling;
                content.style.display = content.style.display === "block" ? "none" : "block";
                const icon = this.querySelector('i');
                icon.classList.toggle('fa-chevron-down');
                icon.classList.toggle('fa-chevron-up');
            });
        });

        const subCollapsibles = document.querySelectorAll(".sub-collapsible");
        subCollapsibles.forEach(subCollapsible => {
            subCollapsible.addEventListener("click", function() {
                this.classList.toggle("active");
                const subContent = this.nextElementSibling;
                subContent.style.display = subContent.style.display === "block" ? "none" : "block";
                const icon = this.querySelector('i');
                icon.classList.toggle('fa-chevron-down');
                icon.classList.toggle('fa-chevron-up');
            });
        });

        searchTransactions(
            'search-transaction',
            'transaction',
            'filter-category',
            'start-date',
            'end-date'
        );

        // const filterBtn = document.getElementById('filter-btn');
        // const filtersSection = document.getElementById('filters-section');

        // filterBtn.addEventListener('click', function(e) {
        //     e.preventDefault();
            
        //     filtersSection.classList.toggle('visible');
        //     filtersSection.style.display = 'block'
        // });
    });

    async function deleteTransaction(transaction) {

        try {
            const response = await fetch(`/recurrent-transactions/${transaction.id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (response.ok) {
                closeModal(`recTransactionModal-${transaction.id}`)
                alertManager.showAlert({
                    title: 'Transaction Deleted Successfully.',
                    type: 'success',
                });
            } else {
                const error = await response.json();
                alertManager.showAlert({
                    title: 'Delete Failed',
                    body: `Error: while deleting transaction: ${error}`,
                    type: 'error-alert',
                });
            }
        } catch (err) {
            console.error('Error deleting transaction:', err);
            alert('An error occurred while deleting the transaction.');
        }
    }

    
</script>
