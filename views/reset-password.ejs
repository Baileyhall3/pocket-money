<%- include('partials/head') %>

<body style="background-color: #f7f7f7;">

<div class="login-section">
    <div class="login">
        <div class="reset-password-section">
            <h2>Set a New Password</h2>
            <form id="newPasswordForm">
                <input type="password" id="new-password" placeholder="New Password" required>
                <input type="password" id="repeat-password" placeholder="Repeat Password" required>
                <div class="error" id="new-password-error-message"></div>
                <button type="submit">Reset Password</button>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const hashParams = new URLSearchParams(window.location.hash.substring(1)); // Remove the '#' character
        const accessToken = hashParams.get('access_token');
        const errorMessageDiv = document.getElementById('new-password-error-message');

        if (!accessToken) {
            errorMessageDiv.textContent = 'Invalid or missing password reset token. Please try again.';
            return;
        }

        document.getElementById('newPasswordForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const newPassword = document.getElementById('new-password').value;
            const repeatPassword = document.getElementById('repeat-password').value;

            // Validate passwords
            if (!newPassword || !repeatPassword) {
                errorMessageDiv.textContent = 'All fields must be filled in.';
                return;
            }
            if (newPassword !== repeatPassword) {
                errorMessageDiv.textContent = 'Passwords do not match!';
                return;
            }
            if (newPassword.length < 8) {
                errorMessageDiv.textContent = 'Password must be at least 8 characters long!';
                return;
            }
            if (!/[0-9]/.test(newPassword)) {
                errorMessageDiv.textContent = 'Password must contain at least one number!';
                return;
            }
            if (!/[A-Z]/.test(newPassword)) {
                errorMessageDiv.textContent = 'Password must contain at least one uppercase letter!';
                return;
            }

            // Send the reset request with the access token
            try {
                const response = await fetch('/update-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ newPassword, accessToken })
                });

                const result = await response.json();

                if (response.ok) {
                    errorMessageDiv.textContent = 'Password successfully updated! Redirecting to login...';
                    errorMessageDiv.style.color = 'green';
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 2000);
                } else {
                    errorMessageDiv.textContent = result.error; // Display error from the server
                }
            } catch (err) {
                console.error(err);
                errorMessageDiv.textContent = 'An unexpected error occurred.';
            }
        });
    });
</script>

</body>